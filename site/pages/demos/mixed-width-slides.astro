---
import Demos from '@components/Demos.astro';
import Carousel from '@components/carousel/Carousel.astro';
---

<Demos
  title="Mixed-width slides"
  description="Carousels with slides of varying widths and sizes"
>

  <Carousel
    title="Centered multi-step scrolling"
    ariaLabel="Carousel with unequal-width slides and centered multi-step scrolling"
    classes={[
      'demo--no-1',
      'demo--four-nav-buttons',
      'demo--mixed-widths',
      'demo--snap-center',
      'demo--steps-auto',
      'demo--digits'
    ]}
    indicators={true}
    boundaryButtons={true}
    digitCount={64}
  >
    <Fragment slot="description">
      <dl>
        <dt>Configuration</dt>
        <dd><code>scrollSteps: 'auto'</code></dd>
        <dd><code>hasEqualWidths: false</code></dd>
      </dl>
    </Fragment>
  </Carousel>

  <Carousel
    title="Start-aligned multi-step scrolling"
    ariaLabel="Carousel with varying-width slides, start-aligned, multi-step"
    classes={[
      'demo--no-2',
      'demo--mixed-widths',
      'demo--steps-auto',
      'demo--digits'
    ]}
    indicators={true}
    digitCount={12}
  >
    <Fragment slot="description">
      <dl>
        <dt>Configuration</dt>
        <dd><code>scrollSteps: 'auto'</code></dd>
        <dd><code>hasEqualWidths: false</code></dd>
      </dl>
    </Fragment>
  </Carousel>

  <Carousel
    title="Centered single-step scrollling"
    ariaLabel="Carousel with twenty varying-width slides, centered, single-step"
    classes={[
      'demo--no-3',
      'demo--mixed-widths',
      'demo--snap-center',
      'demo--steps-one',
      'demo--digits'
    ]}
    indicators={true}
    digitCount={16}
  >
    <Fragment slot="description">
      <dl>
        <dt>Zero configuration</dt>
      </dl>
    </Fragment>
  </Carousel>

  <Carousel
    title="Left-aligned single-step scrollling"
    ariaLabel="Carousel with twenty varying-width slides, left-aligned, single-step"
    classes={[
      'demo--no-4',
      'demo--mixed-widths',
      'demo--snap-start',
      'demo--steps-one',
      'demo--digits'
    ]}
    indicators={true}
    digitCount={32}
  >
    <Fragment slot="description">
      <dl>
        <dt>Zero configuration</dt>
        <dd></dd>
      </dl>
    </Fragment>
  </Carousel>

  <Carousel
    title="Centered, multi-step scrolling"
    ariaLabel="Carousel with 8 images of varying width, centered, multi-step"
    classes={[
      'demo--no-5',
      'demo--mixed-widths',
      'demo--images',
      'demo--snap-center',
    ]}
    indicators={true}
    photoIDs={[
      "alex-padurariu-5rlktbEX5bY",
      "alex-padurariu-ZR48YvUpk04",
      "hamed-daram-776370",
      "clark-van-der-beken-chcyjyRQV74", 
      "delila-ziebart-3P6E2y2lyus",
      "janos-richter-111765",
      "william-daigneault-733670",
      "ferdinand-stohr-O2JbMiA6ias"
    ]}
  >
    <Fragment slot="description">
      <dl>
        <dt>Configuration</dt>
        <dd><code>scrollSteps: 'auto'</code></dd>
        <dd><code>hasEqualWidths: false</code></dd>
      </dl>
    </Fragment>
  </Carousel>
</Demos>

<script>
  import { domReady } from '@utils/dom-ready';
  import { createOmniCarousel } from '@lib/index';

  domReady(() => {
    const manyCenterRoot = document.querySelector('.demo--digits.demo--snap-center.demo--steps-auto');
    const manyStartRoot = document.querySelector('.demo--digits.demo--no-2.demo--steps-auto');
    const oneCenterRoot = document.querySelector('.demo--digits.demo--snap-center.demo--steps-one');
    const oneStartRoot = document.querySelector('.demo--digits.demo--snap-start.demo--steps-one');
    const imagesRoot = document.querySelector('.demo--images');

    const manyCenterCarousel = createOmniCarousel(manyCenterRoot as HTMLElement, {
      scrollSteps: 'auto',
      hasEqualWidths: false,
    });
    manyCenterCarousel.init();

    const manyStartCarousel = createOmniCarousel(manyStartRoot as HTMLElement, {
      scrollSteps: 'auto',
      hasEqualWidths: false,
    });
    manyStartCarousel.init();

    const oneCenterCarousel = createOmniCarousel(oneCenterRoot as HTMLElement);
    oneCenterCarousel.init();

    const oneStartCarousel = createOmniCarousel(oneStartRoot as HTMLElement);
    oneStartCarousel.init();

    const imagesCarousel = createOmniCarousel(imagesRoot as HTMLElement, {
      scrollSteps: 'auto',
      hasEqualWidths: false,
    });
    imagesCarousel.init();
  });
</script>
