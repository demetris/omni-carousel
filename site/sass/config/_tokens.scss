:root {
  ///
  /// Base for modular scale
  ///
  --scale: 1.2;

  ///
  /// Larger base for modular scale
  ///
  --scale-lg: 1.25;

  ///
  /// Sizing and spacing
  ///
  --md:   1rem;

  --sm:   calc(var(--md)  / var(--scale));
  --xs:   calc(var(--sm)  / var(--scale));
  --2xs:  calc(var(--xs)  / var(--scale));
  --3xs:  calc(var(--2xs) / var(--scale));
  --4xs:  calc(var(--3xs) / var(--scale));
  --5xs:  calc(var(--4xs) / var(--scale));
  --6xs:  calc(var(--5xs) / var(--scale));
  --7xs:  calc(var(--6xs) / var(--scale));
  --8xs:  calc(var(--7xs) / var(--scale));

  --lg:   calc(var(--md)  * var(--scale));
  --xl:   calc(var(--lg)  * var(--scale));
  --2xl:  calc(var(--xl)  * var(--scale));
  --3xl:  calc(var(--2xl) * var(--scale));
  --4xl:  calc(var(--3xl) * var(--scale));
  --5xl:  calc(var(--4xl) * var(--scale));
  --6xl:  calc(var(--5xl) * var(--scale));
  --7xl:  calc(var(--6xl) * var(--scale));
  --8xl:  calc(var(--7xl) * var(--scale));

  --sm-xs: calc((var(--sm) + var(--xs)) / 2);
  --md-sm: calc((var(--md) + var(--sm)) / 2);

  --md-lg: calc((var(--md) + var(--lg)) / 2);
  --lg-xl: calc((var(--lg) + var(--xl)) / 2);
}
